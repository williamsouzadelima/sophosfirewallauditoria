# Strati Audit System - Configuração de Ambiente
# Copie este arquivo para .env e configure os valores

# ==============================================
# CONFIGURAÇÕES FLASK
# ==============================================

# Ambiente da aplicação (development/production)
FLASK_ENV=production

# Modo debug (True/False)
FLASK_DEBUG=False

# Chave secreta para JWT e sessões (GERE UMA NOVA CHAVE SEGURA!)
SECRET_KEY=your-secret-key-here-generate-a-secure-one

# ==============================================
# CONFIGURAÇÕES DE REDE
# ==============================================

# Host para bind do servidor (0.0.0.0 para aceitar conexões externas)
HOST=0.0.0.0

# Porta do servidor
PORT=8080

# ==============================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# ==============================================

# Caminho para o banco SQLite
DATABASE_PATH=./data/databases/strati_audit.db

# Para produção, considere usar PostgreSQL:
# DATABASE_URL=postgresql://user:password@localhost:5432/strati_audit

# ==============================================
# CONFIGURAÇÕES SOPHOS FIREWALL AUDIT
# ==============================================

# Caminho para o script oficial do Sophos
SOPHOS_AUDIT_SCRIPT=./sophos-firewall-audit/sophos_firewall_audit.py

# Timeout para auditorias (em segundos)
AUDIT_TIMEOUT=300

# Máximo de auditorias simultâneas
MAX_CONCURRENT_AUDITS=3

# Tentativas de retry em caso de falha
RETRY_ATTEMPTS=3

# ==============================================
# CONFIGURAÇÕES DE SEGURANÇA
# ==============================================

# Expiração do token JWT (em horas)
JWT_EXPIRATION_HOURS=24

# Rounds do BCrypt para hash de senhas
BCRYPT_ROUNDS=12

# Habilitar HTTPS (True/False) - Para produção
ENABLE_HTTPS=False

# Caminho para certificado SSL (se HTTPS habilitado)
SSL_CERT_PATH=

# Caminho para chave privada SSL (se HTTPS habilitado)
SSL_KEY_PATH=

# ==============================================
# CONFIGURAÇÕES DE LOGGING
# ==============================================

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Arquivo principal de log
LOG_FILE=./logs/strati_audit.log

# Arquivo de log de acesso
ACCESS_LOG_FILE=./logs/access.log

# Arquivo de log de erro
ERROR_LOG_FILE=./logs/error.log

# Rotação de logs (tamanho máximo em MB)
LOG_MAX_SIZE=10

# Número de arquivos de backup
LOG_BACKUP_COUNT=5

# ==============================================
# CONFIGURAÇÕES DE EMAIL (OPCIONAL)
# ==============================================

# Habilitar notificações por email
EMAIL_ENABLED=false

# Servidor SMTP
SMTP_SERVER=smtp.gmail.com

# Porta SMTP (587 para TLS, 465 para SSL, 25 para sem criptografia)
SMTP_PORT=587

# Usar TLS (True/False)
SMTP_USE_TLS=true

# Usar SSL (True/False)
SMTP_USE_SSL=false

# Usuário SMTP
SMTP_USERNAME=seu-email@gmail.com

# Senha SMTP (use senhas de aplicativo para Gmail)
SMTP_PASSWORD=sua-senha-de-aplicativo

# Email remetente
FROM_EMAIL=strati-audit@empresa.com

# Email para receber alertas
ALERT_EMAIL=admin@empresa.com

# ==============================================
# CONFIGURAÇÕES DE BACKUP
# ==============================================

# Habilitar backup automático
BACKUP_ENABLED=true

# Intervalo de backup (em horas)
BACKUP_INTERVAL_HOURS=6

# Diretório de backup
BACKUP_DIR=./backups

# Retenção de backups (em dias)
BACKUP_RETENTION_DAYS=30

# Compressão de backup (True/False)
BACKUP_COMPRESSION=true

# ==============================================
# CONFIGURAÇÕES DE ALERTAS
# ==============================================

# Score abaixo do qual é considerado crítico
SCORE_THRESHOLD_CRITICAL=60

# Score abaixo do qual é considerado aviso
SCORE_THRESHOLD_WARNING=80

# Máximo de falhas consecutivas antes de alerta
MAX_CONSECUTIVE_FAILURES=3

# Intervalo mínimo entre alertas (em minutos)
ALERT_COOLDOWN_MINUTES=60

# ==============================================
# CONFIGURAÇÕES DE PERFORMANCE
# ==============================================

# Número de workers para Gunicorn (produção)
WORKERS=4

# Tipo de worker (sync, gevent, eventlet)
WORKER_CLASS=sync

# Timeout para requests (em segundos)
WORKER_TIMEOUT=300

# Keepalive (em segundos)
KEEPALIVE=2

# Máximo de requests por worker
MAX_REQUESTS=1000

# Jitter para max_requests
MAX_REQUESTS_JITTER=100

# ==============================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# ==============================================

# Recarregar automaticamente em mudanças (apenas desenvolvimento)
AUTO_RELOAD=false

# Mostrar debug toolbar (apenas desenvolvimento)
DEBUG_TOOLBAR=false

# Profiling habilitado (apenas desenvolvimento)
PROFILING=false

# ==============================================
# CONFIGURAÇÕES DE INTEGRAÇÃO
# ==============================================

# Webhook URL para notificações (Slack, Teams, etc.)
WEBHOOK_URL=

# Token de API para integrações externas
API_TOKEN=

# Integração com SIEM habilitada
SIEM_INTEGRATION=false

# URL do servidor SIEM
SIEM_URL=

# ==============================================
# CONFIGURAÇÕES DE MONITORAMENTO
# ==============================================

# Habilitar métricas de sistema
SYSTEM_METRICS=true

# Intervalo de coleta de métricas (em segundos)
METRICS_INTERVAL=60

# Habilitar health checks
HEALTH_CHECKS=true

# Intervalo de health check (em segundos)
HEALTH_CHECK_INTERVAL=300

# ==============================================
# CONFIGURAÇÕES DE CACHE (FUTURO)
# ==============================================

# Tipo de cache (redis, memory, disabled)
CACHE_TYPE=memory

# URL do Redis (se CACHE_TYPE=redis)
REDIS_URL=redis://localhost:6379/0

# TTL padrão do cache (em segundos)
CACHE_DEFAULT_TTL=300

# ==============================================
# CONFIGURAÇÕES DE RATE LIMITING (FUTURO)
# ==============================================

# Habilitar rate limiting
RATE_LIMITING=false

# Limite padrão por minuto
DEFAULT_RATE_LIMIT=100

# Limite para login por minuto
LOGIN_RATE_LIMIT=5

# ==============================================
# CONFIGURAÇÕES DE PROXY/LOAD BALANCER
# ==============================================

# Se usando proxy reverso (nginx, apache, etc.)
BEHIND_PROXY=false

# Número de proxies confiáveis
PROXY_COUNT=1

# Headers de proxy confiáveis
PROXY_HEADERS=X-Forwarded-For,X-Forwarded-Proto

# ==============================================
# CONFIGURAÇÕES DE TIMEZONE
# ==============================================

# Timezone da aplicação
TIMEZONE=America/Sao_Paulo

# Formato de data/hora
DATETIME_FORMAT=%d/%m/%Y %H:%M:%S

# ==============================================
# CONFIGURAÇÕES DE ARQUIVO
# ==============================================

# Tamanho máximo de upload (em MB)
MAX_UPLOAD_SIZE=50

# Diretório para uploads temporários
TEMP_DIR=./data/temp

# Diretório para relatórios
REPORTS_DIR=./reports

# Diretório para clients
CLIENTS_DIR=./clients

# ==============================================
# CONFIGURAÇÕES DE API EXTERNA (FUTURO)
# ==============================================

# Integração com VirusTotal
VIRUSTOTAL_API_KEY=

# Integração com Shodan
SHODAN_API_KEY=

# Integração com AbuseIPDB
ABUSEIPDB_API_KEY=

# ==============================================
# CONFIGURAÇÕES DE COMPLIANCE
# ==============================================

# Habilitar relatórios de compliance
COMPLIANCE_REPORTS=true

# Frameworks de compliance (ISO27001, NIST, PCI-DSS)
COMPLIANCE_FRAMEWORKS=ISO27001,NIST

# ==============================================
# NOTAS IMPORTANTES
# ==============================================

# 1. SEMPRE gere uma nova SECRET_KEY para produção
# 2. Configure SMTP apenas se quiser notificações por email
# 3. Para produção, considere usar PostgreSQL ao invés de SQLite
# 4. Configure SSL/TLS em produção
# 5. Ajuste os limites de acordo com seu ambiente
# 6. Faça backup regular das configurações
# 7. Monitore os logs regularmente
# 8. Mantenha as credenciais seguras

# ==============================================
# COMANDOS ÚTEIS
# ==============================================

# Gerar chave secreta:
# python -c "import secrets; print(secrets.token_hex(32))"

# Testar configuração SMTP:
# python -c "import smtplib; s=smtplib.SMTP('smtp.gmail.com', 587); s.starttls(); s.login('user', 'pass')"

# Verificar conectividade com banco:
# python -c "import sqlite3; sqlite3.connect('./data/databases/strati_audit.db').execute('SELECT 1')"
